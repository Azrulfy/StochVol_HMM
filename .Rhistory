lines (monthly.data(data, 6)$period, monthly.data(data, 6)$diff, lwd = 1.3, col=alpha(cs[9],0.7))
lines (monthly.data(data, 7)$period, monthly.data(data, 7)$diff, lwd = 1.3, col=alpha(cs[11],0.7))
lines (monthly.data(data, 8)$period, monthly.data(data, 8)$diff, lwd = 1.3, col=alpha(cs[12],0.7))
lines (monthly.data(data, 9)$period, monthly.data(data, 9)$diff, lwd = 1.3, col=alpha(cs[10],0.7))
lines (monthly.data(data,10)$period, monthly.data(data,10)$diff, lwd = 1.3, col=alpha(cs[8],0.7))
lines (monthly.data(data,11)$period, monthly.data(data,11)$diff, lwd = 1.3, col=alpha(cs[6],0.7))
lines (monthly.data(data,12)$period, monthly.data(data,12)$diff, lwd = 1.3, col=alpha(cs[5],0.7))
lines(monthly.data(data,2)$period[1:96], year.diff.avg, lwd = 1.7, col=alpha("black",0.8))
# add legend
par(mar=c(0, 0, 0, 0))
plot.new()
months <- c("Year", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
cols <- c("black", cs[3], cs[2], cs[1], cs[4], "yellow", cs[9], cs[11], cs[12], cs[10], cs[8], cs[6], cs[5])
legend("right","center", months, col=cols, lty=1, lwd=2.5, bty ="n", seg.len=1, x.intersp=0.5)
draw.plot <- function( dates , y , col='darkblue' , t='l' , lwd=2 , ylim=NULL , main=NULL, legend=FALSE ){
if( is.null(main) ){ par( mar=c(2.5,4,0.1,0.1) ) }
# prepare axis labels
intervals <- seq(dates[1], dates[length(dates)], "year")
axis.labels <- c()
for (i in 1920:2016) {
if (i %in% seq(1920,2015,5))
axis.labels <- c(axis.labels, i)
else
axis.labels <- c(axis.labels, '')
}
yintervals <- c(-10,-5,0,5)
# draw plot
plot( dates , y , t=t , col=col , lwd=lwd , axes=F , xlab='' , ylab='Divergence from long-term monthly average' , xaxs="i" , ylim=ylim , main=main, bty='L')
# x axis
xticks <- axis.Date(1, x=dates, at=intervals, lwd=0, lwd.tick=1, tck=0.01, labels = FALSE, las=2)
axis.Date(3, x=dates, at=seq(dates[1], dates[length(dates)], "year"), lwd=0, lwd.tick=1, tck=0.01, lab=F)
text(x=dates, y=par()$usr[3]-0.03*(par()$usr[4]-par()$usr[3]), labels=axis.labels, srt=45, xpd=TRUE, adj=1)
axis(1, at=intervals[seq(1,length(intervals),5)], lwd=0, lwd.tick=1, tck=0.02, lab=F)
axis(3, at=intervals[seq(1,length(intervals),5)], lwd=0, lwd.tick=1, tck=0.02, lab=F)
# y axis
yticks <- axis(2 , lwd=0, lwd.tick=1, tck=0.02, las=1, at=yintervals, labels=sprintf("%s C°", yintervals))
axis(4, lwd=0, lwd.tick=1, tck=0.02, lab=F)
# in-graph lines
abline( h=yticks , lty=3 )
abline( v=xticks , lty=3, col = alpha('black',0.4) )
box()
}
cs <- colorschemes$BluetoOrange.12
layout(cbind(1,2), widths=c(8,1))
draw.plot (monthly.data(data, 1)$period, monthly.data(data, 1)$diff, ylim=c(-10,8), lwd = 1.3, col=alpha(cs[3],0.7))
draw.plot <- function( dates , y , col='darkblue' , t='l' , lwd=2 , ylim=NULL , main=NULL, legend=FALSE ){
if( is.null(main) ){ par( mar=c(2.5,4.3,0.1,0.1) ) }
# prepare axis labels
intervals <- seq(dates[1], dates[length(dates)], "year")
axis.labels <- c()
for (i in 1920:2016) {
if (i %in% seq(1920,2015,5))
axis.labels <- c(axis.labels, i)
else
axis.labels <- c(axis.labels, '')
}
yintervals <- c(-10,-5,0,5)
# draw plot
plot( dates , y , t=t , col=col , lwd=lwd , axes=F , xlab='' , ylab='Divergence from long-term monthly average' , xaxs="i" , ylim=ylim , main=main, bty='L')
# x axis
xticks <- axis.Date(1, x=dates, at=intervals, lwd=0, lwd.tick=1, tck=0.01, labels = FALSE, las=2)
axis.Date(3, x=dates, at=seq(dates[1], dates[length(dates)], "year"), lwd=0, lwd.tick=1, tck=0.01, lab=F)
text(x=dates, y=par()$usr[3]-0.03*(par()$usr[4]-par()$usr[3]), labels=axis.labels, srt=45, xpd=TRUE, adj=1)
axis(1, at=intervals[seq(1,length(intervals),5)], lwd=0, lwd.tick=1, tck=0.02, lab=F)
axis(3, at=intervals[seq(1,length(intervals),5)], lwd=0, lwd.tick=1, tck=0.02, lab=F)
# y axis
yticks <- axis(2 , lwd=0, lwd.tick=1, tck=0.02, las=1, at=yintervals, labels=sprintf("%s C°", yintervals))
axis(4, lwd=0, lwd.tick=1, tck=0.02, lab=F)
# in-graph lines
abline( h=yticks , lty=3 )
abline( v=xticks , lty=3, col = alpha('black',0.4) )
box()
}
cs <- colorschemes$BluetoOrange.12
layout(cbind(1,2), widths=c(8,1))
draw.plot (monthly.data(data, 1)$period, monthly.data(data, 1)$diff, ylim=c(-10,8), lwd = 1.3, col=alpha(cs[3],0.7))
draw.plot <- function( dates , y , col='darkblue' , t='l' , lwd=2 , ylim=NULL , main=NULL, legend=FALSE ){
if( is.null(main) ){ par( mar=c(2.5,4.3,0.1,0.1) ) }
# prepare axis labels
intervals <- seq(dates[1], dates[length(dates)], "year")
axis.labels <- c()
for (i in 1920:2016) {
if (i %in% seq(1920,2015,5))
axis.labels <- c(axis.labels, i)
else
axis.labels <- c(axis.labels, '')
}
yintervals <- c(-10,-5,0,5)
# draw plot
plot( dates , y , t=t , col=col , lwd=lwd , axes=F , xlab='' , ylab='Divergence from long-term monthly average' , xaxs="i" , ylim=ylim , main=main, bty='L')
# x axis
xticks <- axis.Date(1, x=dates, at=intervals, lwd=0, lwd.tick=1, tck=0.01, labels = FALSE, las=2)
axis.Date(3, x=dates, at=seq(dates[1], dates[length(dates)], "year"), lwd=0, lwd.tick=1, tck=0.01, lab=F)
text(x=dates, y=par()$usr[3]-0.03*(par()$usr[4]-par()$usr[3]), labels=axis.labels, srt=45, xpd=TRUE, adj=1)
axis(1, at=intervals[seq(1,length(intervals),5)], lwd=0, lwd.tick=1, tck=0.02, lab=F)
axis(3, at=intervals[seq(1,length(intervals),5)], lwd=0, lwd.tick=1, tck=0.02, lab=F)
# y axis
yticks <- axis(2 , lwd=0, lwd.tick=1, tck=0.02, las=1, cex=0.7, at=yintervals, labels=sprintf("%s C°", yintervals))
axis(4, lwd=0, lwd.tick=1, tck=0.02, lab=F)
# in-graph lines
abline( h=yticks , lty=3 )
abline( v=xticks , lty=3, col = alpha('black',0.4) )
box()
}
cs <- colorschemes$BluetoOrange.12
layout(cbind(1,2), widths=c(8,1))
draw.plot (monthly.data(data, 1)$period, monthly.data(data, 1)$diff, ylim=c(-10,8), lwd = 1.3, col=alpha(cs[3],0.7))
draw.plot <- function( dates , y , col='darkblue' , t='l' , lwd=2 , ylim=NULL , main=NULL, legend=FALSE ){
if( is.null(main) ){ par( mar=c(2.5,4.3,0.1,0.1) ) }
# prepare axis labels
intervals <- seq(dates[1], dates[length(dates)], "year")
axis.labels <- c()
for (i in 1920:2016) {
if (i %in% seq(1920,2015,5))
axis.labels <- c(axis.labels, i)
else
axis.labels <- c(axis.labels, '')
}
yintervals <- c(-10,-5,0,5)
# draw plot
plot( dates , y , t=t , col=col , lwd=lwd , axes=F , xlab='' , ylab='Divergence from long-term monthly average' , xaxs="i" , ylim=ylim , main=main, bty='L')
# x axis
xticks <- axis.Date(1, x=dates, at=intervals, lwd=0, lwd.tick=1, tck=0.01, labels = FALSE, las=2)
axis.Date(3, x=dates, at=seq(dates[1], dates[length(dates)], "year"), lwd=0, lwd.tick=1, tck=0.01, lab=F)
text(x=dates, y=par()$usr[3]-0.03*(par()$usr[4]-par()$usr[3]), labels=axis.labels, srt=45, xpd=TRUE, adj=1)
axis(1, at=intervals[seq(1,length(intervals),5)], lwd=0, lwd.tick=1, tck=0.02, lab=F)
axis(3, at=intervals[seq(1,length(intervals),5)], lwd=0, lwd.tick=1, tck=0.02, lab=F)
# y axis
yticks <- axis(2 , lwd=0, lwd.tick=1, tck=0.02, las=1, cex.lab=0.7, at=yintervals, labels=sprintf("%s C°", yintervals))
axis(4, lwd=0, lwd.tick=1, tck=0.02, lab=F)
# in-graph lines
abline( h=yticks , lty=3 )
abline( v=xticks , lty=3, col = alpha('black',0.4) )
box()
}
cs <- colorschemes$BluetoOrange.12
layout(cbind(1,2), widths=c(8,1))
draw.plot (monthly.data(data, 1)$period, monthly.data(data, 1)$diff, ylim=c(-10,8), lwd = 1.3, col=alpha(cs[3],0.7))
draw.plot <- function( dates , y , col='darkblue' , t='l' , lwd=2 , ylim=NULL , main=NULL, legend=FALSE ){
if( is.null(main) ){ par( mar=c(2.5,4.3,0.1,0.1) ) }
# prepare axis labels
intervals <- seq(dates[1], dates[length(dates)], "year")
axis.labels <- c()
for (i in 1920:2016) {
if (i %in% seq(1920,2015,5))
axis.labels <- c(axis.labels, i)
else
axis.labels <- c(axis.labels, '')
}
yintervals <- c(-10,-5,0,5)
# draw plot
plot( dates , y , t=t , col=col , lwd=lwd , axes=F , xlab='' , ylab='Divergence from long-term monthly average' , xaxs="i" , ylim=ylim , main=main, bty='L')
# x axis
xticks <- axis.Date(1, x=dates, at=intervals, lwd=0, lwd.tick=1, tck=0.01, labels = FALSE, las=2)
axis.Date(3, x=dates, at=seq(dates[1], dates[length(dates)], "year"), lwd=0, lwd.tick=1, tck=0.01, lab=F)
text(x=dates, y=par()$usr[3]-0.03*(par()$usr[4]-par()$usr[3]), labels=axis.labels, srt=45, xpd=TRUE, adj=1)
axis(1, at=intervals[seq(1,length(intervals),5)], lwd=0, lwd.tick=1, tck=0.02, lab=F)
axis(3, at=intervals[seq(1,length(intervals),5)], lwd=0, lwd.tick=1, tck=0.02, lab=F)
# y axis
yticks <- axis(2 , lwd=0, lwd.tick=1, tck=0.02, las=1, cex.lab=1.5, at=yintervals, labels=sprintf("%s C°", yintervals))
axis(4, lwd=0, lwd.tick=1, tck=0.02, lab=F)
# in-graph lines
abline( h=yticks , lty=3 )
abline( v=xticks , lty=3, col = alpha('black',0.4) )
box()
}
cs <- colorschemes$BluetoOrange.12
layout(cbind(1,2), widths=c(8,1))
draw.plot (monthly.data(data, 1)$period, monthly.data(data, 1)$diff, ylim=c(-10,8), lwd = 1.3, col=alpha(cs[3],0.7))
draw.plot <- function( dates , y , col='darkblue' , t='l' , lwd=2 , ylim=NULL , main=NULL, legend=FALSE ){
if( is.null(main) ){ par( mar=c(2.5,4.4,0.1,0.1) ) }
# prepare axis labels
intervals <- seq(dates[1], dates[length(dates)], "year")
axis.labels <- c()
for (i in 1920:2016) {
if (i %in% seq(1920,2015,5))
axis.labels <- c(axis.labels, i)
else
axis.labels <- c(axis.labels, '')
}
yintervals <- c(-10,-5,0,5)
# draw plot
plot( dates , y , t=t , col=col , lwd=lwd , axes=F , xlab='' , ylab='Divergence from long-term monthly average' , xaxs="i" , ylim=ylim , main=main, bty='L')
# x axis
xticks <- axis.Date(1, x=dates, at=intervals, lwd=0, lwd.tick=1, tck=0.01, labels = FALSE, las=2)
axis.Date(3, x=dates, at=seq(dates[1], dates[length(dates)], "year"), lwd=0, lwd.tick=1, tck=0.01, lab=F)
text(x=dates, y=par()$usr[3]-0.03*(par()$usr[4]-par()$usr[3]), labels=axis.labels, srt=45, xpd=TRUE, adj=1)
axis(1, at=intervals[seq(1,length(intervals),5)], lwd=0, lwd.tick=1, tck=0.02, lab=F)
axis(3, at=intervals[seq(1,length(intervals),5)], lwd=0, lwd.tick=1, tck=0.02, lab=F)
# y axis
yticks <- axis(2 , lwd=0, lwd.tick=1, tck=0.02, las=1, at=yintervals, labels=sprintf("%s C°", yintervals))
axis(4, lwd=0, lwd.tick=1, tck=0.02, lab=F)
# in-graph lines
abline( h=yticks , lty=3 )
abline( v=xticks , lty=3, col = alpha('black',0.4) )
box()
}
cs <- colorschemes$BluetoOrange.12
layout(cbind(1,2), widths=c(8,1))
draw.plot (monthly.data(data, 1)$period, monthly.data(data, 1)$diff, ylim=c(-10,8), lwd = 1.3, col=alpha(cs[3],0.7))
lines (monthly.data(data, 2)$period, monthly.data(data, 2)$diff, lwd = 1.3, col=alpha(cs[2],0.7))
lines (monthly.data(data, 3)$period, monthly.data(data, 3)$diff, lwd = 1.3, col=alpha(cs[1],0.7))
lines (monthly.data(data, 4)$period, monthly.data(data, 4)$diff, lwd = 1.3, col=alpha(cs[4],0.7))
lines (monthly.data(data, 5)$period, monthly.data(data, 5)$diff, lwd = 1.3, col=alpha("yellow",0.7))
lines (monthly.data(data, 6)$period, monthly.data(data, 6)$diff, lwd = 1.3, col=alpha(cs[9],0.7))
lines (monthly.data(data, 7)$period, monthly.data(data, 7)$diff, lwd = 1.3, col=alpha(cs[11],0.7))
lines (monthly.data(data, 8)$period, monthly.data(data, 8)$diff, lwd = 1.3, col=alpha(cs[12],0.7))
lines (monthly.data(data, 9)$period, monthly.data(data, 9)$diff, lwd = 1.3, col=alpha(cs[10],0.7))
lines (monthly.data(data,10)$period, monthly.data(data,10)$diff, lwd = 1.3, col=alpha(cs[8],0.7))
lines (monthly.data(data,11)$period, monthly.data(data,11)$diff, lwd = 1.3, col=alpha(cs[6],0.7))
lines (monthly.data(data,12)$period, monthly.data(data,12)$diff, lwd = 1.3, col=alpha(cs[5],0.7))
lines(monthly.data(data,2)$period[1:96], year.diff.avg, lwd = 1.7, col=alpha("black",0.8))
# add legend
par(mar=c(0, 0, 0, 0))
plot.new()
months <- c("Year", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
cols <- c("black", cs[3], cs[2], cs[1], cs[4], "yellow", cs[9], cs[11], cs[12], cs[10], cs[8], cs[6], cs[5])
legend("right","center", months, col=cols, lty=1, lwd=2.5, bty ="n", seg.len=1, x.intersp=0.5)
monthly.average <- function(data, month) {
month.data <- data[as.numeric(strftime(data$period, "%m")) == month,][1:75]
mean(month.data$temp)
}
yearly.average <- function(data, year) {
year.data <- data[as.numeric(strftime(data$period, "%Y")) == year,][1:75]
mean(year.data$temp)
}
monthly.average <- function(data, month) {
month.data <- data[as.numeric(strftime(data$period, "%m")) == month,][1:75]
mean(month.data$temp)
}
yearly.average <- function(data, year) {
year.data <- data[as.numeric(strftime(data$period, "%Y")) == year,][1:75]
mean(year.data$temp)
}
yearly.average(data, 2016)
monthly.average <- function(data, month) {
month.data <- data[as.numeric(strftime(data$period, "%m")) == month,][1:75,]
mean(month.data$temp)
}
yearly.average <- function(data, year) {
year.data <- data[as.numeric(strftime(data$period, "%Y")) == year,][1:75,]
mean(year.data$temp)
}
yearly.average(data, 2016)
data[as.numeric(strftime(data$period, "%m")) == 9,]
data[as.numeric(strftime(data$period, "%m")) == 9,][1:75,]
monthly.average (data, 3)
monthly.average <- function(data, month) {
month.data <- data[as.numeric(strftime(data$period, "%m")) == month,]
mean(month.data$temp)
}
monthly.average (data, 3)
month.data <- data[as.numeric(strftime(data$period, "%m")) == 3,]
mean(month.data$temp)
month.data
mean(month.data$temp)
data <- read.table("data/eklima3-data.txt", col.names=c("temp"))
period <- seq(from = as.Date("1920/2/1"), to = as.Date("2016/1/1"), by = "month")
data["period"] <- period
data <- data[,c(2,1)]
monthly.average (data, 3)
monthly.average <- function(data, month) {
month.data <- data[as.numeric(strftime(data$period, "%m")) == month,][1:75,]
mean(month.data$temp)
}
yearly.average <- function(data, year) {
year.data <- data[as.numeric(strftime(data$period, "%Y")) == year,][1:75,]
mean(year.data$temp)
}
monthly.average (data, 3)
yearly.average(data, 2016)
yearly.average(data, 1966 )
yearly.average <- function(data, year) {
year.data <- data[as.numeric(strftime(data$period, "%Y")) == year,]
mean(year.data$temp)
}
yearly.average(data, 1966 )
diff.st.lt <- function(data) {
# compute long-term averages
lt.average <- rep(0,12)
for (i in 1:12) {
lt.average[i] <- monthly.average(data,i)
}
# compute divergence from long-term averages
diff <- rep(0,nrow(data))
for (i in 1:nrow(data)) {
diff[i] <- data$temp[i] - lt.average[as.numeric(strftime(data$period[i], "%m"))]
}
return(diff)
}
data["diff"] <- diff.st.lt(data)
year.avg <- rep(0,2016-1921)
for (y in 1:length(year.avg)) {
year.avg[y] <- yearly.average(data, 1920+y)
}
year.diff.avg <- rep(0,96)
for (y in 1:96) {
year.diff.avg[y] <- yearly.diff.avg(data, 1919+y)
}
cs <- colorschemes$BluetoOrange.12
layout(cbind(1,2), widths=c(8,1))
draw.plot (monthly.data(data, 1)$period, monthly.data(data, 1)$diff, ylim=c(-10,8), lwd = 1.3, col=alpha(cs[3],0.7))
lines (monthly.data(data, 2)$period, monthly.data(data, 2)$diff, lwd = 1.3, col=alpha(cs[2],0.7))
lines (monthly.data(data, 3)$period, monthly.data(data, 3)$diff, lwd = 1.3, col=alpha(cs[1],0.7))
lines (monthly.data(data, 4)$period, monthly.data(data, 4)$diff, lwd = 1.3, col=alpha(cs[4],0.7))
lines (monthly.data(data, 5)$period, monthly.data(data, 5)$diff, lwd = 1.3, col=alpha("yellow",0.7))
lines (monthly.data(data, 6)$period, monthly.data(data, 6)$diff, lwd = 1.3, col=alpha(cs[9],0.7))
lines (monthly.data(data, 7)$period, monthly.data(data, 7)$diff, lwd = 1.3, col=alpha(cs[11],0.7))
lines (monthly.data(data, 8)$period, monthly.data(data, 8)$diff, lwd = 1.3, col=alpha(cs[12],0.7))
lines (monthly.data(data, 9)$period, monthly.data(data, 9)$diff, lwd = 1.3, col=alpha(cs[10],0.7))
lines (monthly.data(data,10)$period, monthly.data(data,10)$diff, lwd = 1.3, col=alpha(cs[8],0.7))
lines (monthly.data(data,11)$period, monthly.data(data,11)$diff, lwd = 1.3, col=alpha(cs[6],0.7))
lines (monthly.data(data,12)$period, monthly.data(data,12)$diff, lwd = 1.3, col=alpha(cs[5],0.7))
lines(monthly.data(data,2)$period[1:96], year.diff.avg, lwd = 1.7, col=alpha("black",0.8))
# add legend
par(mar=c(0, 0, 0, 0))
plot.new()
months <- c("Year", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
cols <- c("black", cs[3], cs[2], cs[1], cs[4], "yellow", cs[9], cs[11], cs[12], cs[10], cs[8], cs[6], cs[5])
legend("right","center", months, col=cols, lty=1, lwd=2.5, bty ="n", seg.len=1, x.intersp=0.5)
rm(list=ls())
save.plots <- FALSE
set.seed(1234, kind = NULL, normal.kind = NULL)
# load libraries
library(fanplot)
setwd("/Users/Hans-Peter/Documents/Masters/12F005/project/StochVol_HMM")
source("multiplot_ts.R")
source("sv_sim.R")       # simulates the returns and volatility time series
source("sir.R")          # computes the sequential importance resampling (prediction + filtering)
source("csir.R")
source("sv_fit.R")
source("sv_loglik.R")
dyn.load("csir.so")
T <- 1000; const <- 0.05; phi <- 0.98; tau2 <- 0.02
theta <- c(const, phi, tau2)
# simulate time series
sim_df <- sv_sim(theta, T)
y <- sim_df$y
alpha <- sim_df$alpha
# plot time series with 95% confidence interval
if(save.plots) pdf("../images/ts_returns.pdf")
plot(y, type="l")
lines( 1.96 * exp(alpha/2), col= "red")
lines(-1.96 * exp(alpha/2), col= "red")
if(save.plots) dev.off()
# plot time series volatility
if(save.plots) pdf("../images/ts_volatility.pdf")
plot(sqrt(252) * exp(alpha/2), type='l')
if(save.plots) dev.off()
# ----------------------------------------------------------------------
# Setup particle filtering
# ----------------------------------------------------------------------
P <- 200 # set number of particles
alpha_up <- rnorm(P,0,0.1)
alpha_pr <- rep(0,P)
alpha_wt <- rep(1,P)/P
alpha_up_mat <- matrix(rep(0, T*3),T)
alpha_pr_mat <- matrix(rep(0, T*3),T)
alpha_pr_are <- matrix(rep(0, T*20),T)
# generate a particle set of P random draws from an approximation
# of the prediction and filtering distribution for every time series point
for (t in 1:T){
# prediction step
alpha_pr <- const + phi * alpha_up  + rnorm(P,0,sqrt(tau2))
# update/filtering step (normal density)
alpha_wt <- dnorm(y[t]*rep(1,P), mean=0 , sd = exp(alpha_pr/2))
alpha_up <- sir(alpha_pr=alpha_pr,alpha_wt=alpha_wt, u=sort(runif(P,0,1)))
alpha_up_mat[t,2] <- mean(alpha_up)
alpha_up_mat[t,1] <- quantile(alpha_up,0.05)
alpha_up_mat[t,3] <- quantile(alpha_up,0.95)
alpha_pr_mat[t,2] <- mean(alpha_pr)
alpha_pr_mat[t,1] <- quantile(alpha_pr,0.05)
alpha_pr_mat[t,3] <- quantile( alpha_pr,0.95)
alpha_pr_are[t,] <- quantile(alpha_pr, seq(0,1,1/(ncol(alpha_pr_are)-1)))
}
# plot prediction density
if(save.plots) pdf("../images/prediction_density.pdf")
plot(sqrt(252) * exp(alpha/2), type='l')
lines(sqrt(252) * exp(alpha_up_mat[,1]/2), col='blue')
lines(sqrt(252) * exp(alpha_up_mat[,2]/2), col='blue')
lines(sqrt(252) * exp(alpha_up_mat[,3]/2), col='blue')
if(save.plots) dev.off()
# plot filtering density
if(save.plots) pdf("../images/filtering_density.pdf")
plot(sqrt(252) * exp(alpha/2), type='l')
lines(sqrt(252) * exp(alpha_pr_mat[,1]/2), col='blue')
lines(sqrt(252) * exp(alpha_pr_mat[,2]/2), col='blue')
lines(sqrt(252) * exp(alpha_pr_mat[,3]/2), col='blue')
if(save.plots) dev.off()
# ----------------------------------------------------------------------
# Plotting heat maps
# ----------------------------------------------------------------------
heat <- matrix(rep(1,T*20), T, 20)
for (i in 1:20) {
heat[,i] <- sqrt(252)*exp(alpha_pr_are[,21-i]/2)
}
jet.colors <- colorRampPalette(c("red", "#FF7F00", "yellow","#7FFF7F", "cyan", "#007FFF", "blue"),
bias=1, space="rgb", interpolate="spline")
if(save.plots) pdf("../images/sv-sim-predicting-dist.pdf")
plot(NULL, xlim = c(1, T), ylim = c(0, 160))
fan(data = t(heat), fan.col = jet.colors)
if(save.plots) dev.off()
if(save.plots) pdf("../images/sv-sim-predicting-dist-act.pdf")
plot(NULL, xlim = c(1, T), ylim = c(0, 160))
fan(data = t(heat), fan.col = jet.colors)
lines( sqrt(252)*exp(alpha/2) ,  col="black")
if(save.plots) dev.off()
layout(cbind(1))
if(save.plots) pdf("../images/sv-sim-predicting-dist-act.pdf")
plot(NULL, xlim = c(1, T), ylim = c(0, 160))
fan(data = t(heat), fan.col = jet.colors)
lines( sqrt(252)*exp(alpha/2) ,  col="black")
if(save.plots) dev.off()
if(save.plots) pdf("../images/sv-sim-predicting-dist.pdf")
plot(NULL, xlim = c(1, T), ylim = c(0, 160))
fan(data = t(heat), fan.col = jet.colors)
if(save.plots) dev.off()
heat <- matrix(rep(1,T*20), T, 20)
for (i in 1:20) {
heat[,i] <- sqrt(252)*exp(alpha_pr_are[,21-i]/2)
}
jet.colors <- colorRampPalette(c("red", "#FF7F00", "yellow","#7FFF7F", "cyan", "#007FFF", "blue"),
bias=1, space="rgb", interpolate="spline")
if(save.plots) pdf("../images/sv-sim-predicting-dist.pdf")
plot(NULL, xlim = c(1, T), ylim = c(0, 160))
fan(data = t(heat), fan.col = jet.colors)
if(save.plots) dev.off()
if(save.plots) pdf("../images/sv-sim-predicting-dist-act.pdf")
plot(NULL, xlim = c(1, T), ylim = c(0, 160))
fan(data = t(heat), fan.col = jet.colors)
lines( sqrt(252)*exp(alpha/2) ,  col="black")
if(save.plots) dev.off()
if(save.plots) pdf("../images/filtering_density.pdf")
plot(sqrt(252) * exp(alpha/2), type='l')
lines(sqrt(252) * exp(alpha_pr_mat[,1]/2), col='blue')
lines(sqrt(252) * exp(alpha_pr_mat[,2]/2), col='blue')
lines(sqrt(252) * exp(alpha_pr_mat[,3]/2), col='blue')
if(save.plots) dev.off()
T <- 1000; const <- 0.05; phi <- 0.98; tau2 <- 0.02
theta <- c(const, phi, tau2)
# simulate time series
sim_df <- sv_sim(theta, T)
y <- sim_df$y
alpha <- sim_df$alpha
# plot time series with 95% confidence interval
if(save.plots) pdf("../images/ts_returns.pdf")
plot(y, type="l")
lines( 1.96 * exp(alpha/2), col= "red")
lines(-1.96 * exp(alpha/2), col= "red")
if(save.plots) dev.off()
# plot time series volatility
if(save.plots) pdf("../images/ts_volatility.pdf")
plot(sqrt(252) * exp(alpha/2), type='l')
if(save.plots) dev.off()
# ----------------------------------------------------------------------
# Setup particle filtering
# ----------------------------------------------------------------------
P <- 200 # set number of particles
alpha_up <- rnorm(P,0,0.1)
alpha_pr <- rep(0,P)
alpha_wt <- rep(1,P)/P
alpha_up_mat <- matrix(rep(0, T*3),T)
alpha_pr_mat <- matrix(rep(0, T*3),T)
alpha_pr_are <- matrix(rep(0, T*20),T)
# generate a particle set of P random draws from an approximation
# of the prediction and filtering distribution for every time series point
for (t in 1:T){
# prediction step
alpha_pr <- const + phi * alpha_up  + rnorm(P,0,sqrt(tau2))
# update/filtering step (normal density)
alpha_wt <- dnorm(y[t]*rep(1,P), mean=0 , sd = exp(alpha_pr/2))
alpha_up <- sir(alpha_pr=alpha_pr,alpha_wt=alpha_wt, u=sort(runif(P,0,1)))
alpha_up_mat[t,2] <- mean(alpha_up)
alpha_up_mat[t,1] <- quantile(alpha_up,0.05)
alpha_up_mat[t,3] <- quantile(alpha_up,0.95)
alpha_pr_mat[t,2] <- mean(alpha_pr)
alpha_pr_mat[t,1] <- quantile(alpha_pr,0.05)
alpha_pr_mat[t,3] <- quantile( alpha_pr,0.95)
alpha_pr_are[t,] <- quantile(alpha_pr, seq(0,1,1/(ncol(alpha_pr_are)-1)))
}
# plot prediction density
if(save.plots) pdf("../images/prediction_density.pdf")
plot(sqrt(252) * exp(alpha/2), type='l')
lines(sqrt(252) * exp(alpha_up_mat[,1]/2), col='blue')
lines(sqrt(252) * exp(alpha_up_mat[,2]/2), col='blue')
lines(sqrt(252) * exp(alpha_up_mat[,3]/2), col='blue')
if(save.plots) dev.off()
# plot filtering density
if(save.plots) pdf("../images/filtering_density.pdf")
plot(sqrt(252) * exp(alpha/2), type='l')
lines(sqrt(252) * exp(alpha_pr_mat[,1]/2), col='blue')
lines(sqrt(252) * exp(alpha_pr_mat[,2]/2), col='blue')
lines(sqrt(252) * exp(alpha_pr_mat[,3]/2), col='blue')
if(save.plots) dev.off()
# ----------------------------------------------------------------------
# Plotting heat maps
# ----------------------------------------------------------------------
heat <- matrix(rep(1,T*20), T, 20)
for (i in 1:20) {
heat[,i] <- sqrt(252)*exp(alpha_pr_are[,21-i]/2)
}
jet.colors <- colorRampPalette(c("red", "#FF7F00", "yellow","#7FFF7F", "cyan", "#007FFF", "blue"),
bias=1, space="rgb", interpolate="spline")
if(save.plots) pdf("../images/sv-sim-predicting-dist.pdf")
plot(NULL, xlim = c(1, T), ylim = c(0, 160))
fan(data = t(heat), fan.col = jet.colors)
if(save.plots) dev.off()
if(save.plots) pdf("../images/sv-sim-predicting-dist-act.pdf")
plot(NULL, xlim = c(1, T), ylim = c(0, 160))
fan(data = t(heat), fan.col = jet.colors)
lines( sqrt(252)*exp(alpha/2) ,  col="black")
if(save.plots) dev.off()
